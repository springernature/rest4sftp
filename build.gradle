group 'com.github.uberto'
version '0.8.0-SNAPSHOT'

apply plugin: "application"
apply plugin: "idea"
apply plugin: "kotlin"
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'io.codearte.nexus-staging'

ext {
    httpVersion = "4.5.3"
    http4kVersion = "3.112.0"
    jettyVersion = "9.4.7.v20170914"
    jvmVersion = "1.8"
    slf4jVersion = "1.7.25"
    junitVersion = '5.4.0'
    jacksonVersion = '2.9.8'
}

buildscript {
    ext.kotlinVersion = "1.3.20"

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.20.0"
    }
}

wrapper {
    gradleVersion = "5.2.1"
}

sourceCompatibility = "${jvmVersion}"
targetCompatibility = "${jvmVersion}"

repositories {
    jcenter()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "${jvmVersion}"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "${jvmVersion}"
    }
}


test {
    exclude 'integrationtest/**/*'

    useJUnitPlatform()
    testLogging.showStandardStreams = true
}


applicationName = archivesBaseName
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8", "-Duser.timezone=UTC"]

mainClassName = "com.ubertob.rest4sftp.main.MainKt"


dependencies{

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
    compile "org.http4k:http4k-core:${http4kVersion}"
    compile "org.http4k:http4k-client-apache:${http4kVersion}"
    compile "org.http4k:http4k-server-jetty:${http4kVersion}"
    compile "org.http4k:http4k-multipart:${http4kVersion}"
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile 'com.xenomachina:kotlin-argparser:2.0.7'
    compile 'commons-net:commons-net:3.6'
    compile 'com.hierynomus:sshj:0.27.0'


    testCompile   'com.willowtreeapps.assertk:assertk-jvm:0.13'
    testCompile   "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testCompile   "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testCompile   "org.junit.jupiter:junit-jupiter-params:${junitVersion}"

}

archivesBaseName = 'rest4sftp'

modifyPom {
    project {
        name 'rest4sftp'
        description 'Bridge from RESTful api to SFTP and FTP'
        url 'https://github.com/uberto/rest4sftp'
        inceptionYear '2019'
        scm {
            url 'https://github.com/uberto/rest4sftp'
            connection 'https://github.com/uberto/rest4sftp.git'
            developerConnection 'git@github.com:uberto/rest4sftp.git'
        }
        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }
        developers {
            developer {
                id 'UbertoBarbini'
                name 'Uberto Barbini'
                email 'uberto.gama@gmail.com'
            }
            developer {
                id 'tompower-sn'
                name 'Tom Power'
                email 'tom.power@springernature.com'
            }
        }
    }
}
extraArchive {
    sources = true
    tests = true
    javadoc = true
}
nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
}